// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: quizsession.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QuizSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Duration int32  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *QuizSession) Reset() {
	*x = QuizSession{}
	mi := &file_quizsession_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuizSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuizSession) ProtoMessage() {}

func (x *QuizSession) ProtoReflect() protoreflect.Message {
	mi := &file_quizsession_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuizSession.ProtoReflect.Descriptor instead.
func (*QuizSession) Descriptor() ([]byte, []int) {
	return file_quizsession_proto_rawDescGZIP(), []int{0}
}

func (x *QuizSession) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QuizSession) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QuizSession) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type CreateQuizSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Duration int32  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *CreateQuizSessionRequest) Reset() {
	*x = CreateQuizSessionRequest{}
	mi := &file_quizsession_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuizSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuizSessionRequest) ProtoMessage() {}

func (x *CreateQuizSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quizsession_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuizSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateQuizSessionRequest) Descriptor() ([]byte, []int) {
	return file_quizsession_proto_rawDescGZIP(), []int{1}
}

func (x *CreateQuizSessionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateQuizSessionRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type CreateQuizSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizSession *QuizSession `protobuf:"bytes,1,opt,name=quizSession,proto3" json:"quizSession,omitempty"`
}

func (x *CreateQuizSessionResponse) Reset() {
	*x = CreateQuizSessionResponse{}
	mi := &file_quizsession_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuizSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuizSessionResponse) ProtoMessage() {}

func (x *CreateQuizSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quizsession_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuizSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateQuizSessionResponse) Descriptor() ([]byte, []int) {
	return file_quizsession_proto_rawDescGZIP(), []int{2}
}

func (x *CreateQuizSessionResponse) GetQuizSession() *QuizSession {
	if x != nil {
		return x.QuizSession
	}
	return nil
}

type GetQuizSessionByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetQuizSessionByIdRequest) Reset() {
	*x = GetQuizSessionByIdRequest{}
	mi := &file_quizsession_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuizSessionByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuizSessionByIdRequest) ProtoMessage() {}

func (x *GetQuizSessionByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quizsession_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuizSessionByIdRequest.ProtoReflect.Descriptor instead.
func (*GetQuizSessionByIdRequest) Descriptor() ([]byte, []int) {
	return file_quizsession_proto_rawDescGZIP(), []int{3}
}

func (x *GetQuizSessionByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetQuizSessionByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizSession *QuizSession `protobuf:"bytes,1,opt,name=quizSession,proto3" json:"quizSession,omitempty"`
}

func (x *GetQuizSessionByIdResponse) Reset() {
	*x = GetQuizSessionByIdResponse{}
	mi := &file_quizsession_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuizSessionByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuizSessionByIdResponse) ProtoMessage() {}

func (x *GetQuizSessionByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quizsession_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuizSessionByIdResponse.ProtoReflect.Descriptor instead.
func (*GetQuizSessionByIdResponse) Descriptor() ([]byte, []int) {
	return file_quizsession_proto_rawDescGZIP(), []int{4}
}

func (x *GetQuizSessionByIdResponse) GetQuizSession() *QuizSession {
	if x != nil {
		return x.QuizSession
	}
	return nil
}

type JoinQuizRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizSessionId string `protobuf:"bytes,1,opt,name=quizSessionId,proto3" json:"quizSessionId,omitempty"`
	UserId        string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *JoinQuizRequest) Reset() {
	*x = JoinQuizRequest{}
	mi := &file_quizsession_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinQuizRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinQuizRequest) ProtoMessage() {}

func (x *JoinQuizRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quizsession_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinQuizRequest.ProtoReflect.Descriptor instead.
func (*JoinQuizRequest) Descriptor() ([]byte, []int) {
	return file_quizsession_proto_rawDescGZIP(), []int{5}
}

func (x *JoinQuizRequest) GetQuizSessionId() string {
	if x != nil {
		return x.QuizSessionId
	}
	return ""
}

func (x *JoinQuizRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type JoinQuizResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizSession *QuizSession `protobuf:"bytes,1,opt,name=quizSession,proto3" json:"quizSession,omitempty"`
}

func (x *JoinQuizResponse) Reset() {
	*x = JoinQuizResponse{}
	mi := &file_quizsession_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinQuizResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinQuizResponse) ProtoMessage() {}

func (x *JoinQuizResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quizsession_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinQuizResponse.ProtoReflect.Descriptor instead.
func (*JoinQuizResponse) Descriptor() ([]byte, []int) {
	return file_quizsession_proto_rawDescGZIP(), []int{6}
}

func (x *JoinQuizResponse) GetQuizSession() *QuizSession {
	if x != nil {
		return x.QuizSession
	}
	return nil
}

var File_quizsession_proto protoreflect.FileDescriptor

var file_quizsession_proto_rawDesc = []byte{
	0x0a, 0x11, 0x71, 0x75, 0x69, 0x7a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x0b, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x71,
	0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x71, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x71, 0x75, 0x69, 0x7a, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x51, 0x75,
	0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x71, 0x75, 0x69, 0x7a, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x51, 0x75,
	0x69, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x71, 0x75, 0x69,
	0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x71, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x51,
	0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x71,
	0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x71, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xe0, 0x01, 0x0a, 0x12,
	0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x51, 0x75, 0x69, 0x7a, 0x12, 0x10, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06,
	0x5a, 0x04, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_quizsession_proto_rawDescOnce sync.Once
	file_quizsession_proto_rawDescData = file_quizsession_proto_rawDesc
)

func file_quizsession_proto_rawDescGZIP() []byte {
	file_quizsession_proto_rawDescOnce.Do(func() {
		file_quizsession_proto_rawDescData = protoimpl.X.CompressGZIP(file_quizsession_proto_rawDescData)
	})
	return file_quizsession_proto_rawDescData
}

var file_quizsession_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_quizsession_proto_goTypes = []any{
	(*QuizSession)(nil),                // 0: QuizSession
	(*CreateQuizSessionRequest)(nil),   // 1: CreateQuizSessionRequest
	(*CreateQuizSessionResponse)(nil),  // 2: CreateQuizSessionResponse
	(*GetQuizSessionByIdRequest)(nil),  // 3: GetQuizSessionByIdRequest
	(*GetQuizSessionByIdResponse)(nil), // 4: GetQuizSessionByIdResponse
	(*JoinQuizRequest)(nil),            // 5: JoinQuizRequest
	(*JoinQuizResponse)(nil),           // 6: JoinQuizResponse
}
var file_quizsession_proto_depIdxs = []int32{
	0, // 0: CreateQuizSessionResponse.quizSession:type_name -> QuizSession
	0, // 1: GetQuizSessionByIdResponse.quizSession:type_name -> QuizSession
	0, // 2: JoinQuizResponse.quizSession:type_name -> QuizSession
	1, // 3: QuizSessionService.CreateQuizSession:input_type -> CreateQuizSessionRequest
	3, // 4: QuizSessionService.GetQuizSessionById:input_type -> GetQuizSessionByIdRequest
	5, // 5: QuizSessionService.JoinQuiz:input_type -> JoinQuizRequest
	2, // 6: QuizSessionService.CreateQuizSession:output_type -> CreateQuizSessionResponse
	4, // 7: QuizSessionService.GetQuizSessionById:output_type -> GetQuizSessionByIdResponse
	6, // 8: QuizSessionService.JoinQuiz:output_type -> JoinQuizResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_quizsession_proto_init() }
func file_quizsession_proto_init() {
	if File_quizsession_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_quizsession_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_quizsession_proto_goTypes,
		DependencyIndexes: file_quizsession_proto_depIdxs,
		MessageInfos:      file_quizsession_proto_msgTypes,
	}.Build()
	File_quizsession_proto = out.File
	file_quizsession_proto_rawDesc = nil
	file_quizsession_proto_goTypes = nil
	file_quizsession_proto_depIdxs = nil
}
